<?php

namespace IntersectionTypesScenario;

/**
 * Interface that requires a getId() method returning a string.
 */
interface Identifiable
{
    public function getId(): string;

}

namespace IntersectionTypesScenario;

/**
 * Interface that requires a getName() method returning a string.
 */
interface Nameable
{
    public function getName(): string;

}

namespace IntersectionTypesScenario;

/**
 * A class implementing both Identifiable and Nameable.
 */
class Person implements \IntersectionTypesScenario\Identifiable, \IntersectionTypesScenario\Nameable
{
    private string $id;

    private string $name;

    public function __construct(string $id, string $name)
    {
        // stub
    }

    public function getId(): string
    {
        // stub
    }

    public function getName(): string
    {
        // stub
    }

}

/**
 * A function that accepts an object which is both Identifiable AND Nameable (intersection type).
 */
function IntersectionTypesScenario\describeEntity(IntersectionTypesScenario\Identifiable&IntersectionTypesScenario\Nameable $entity): string
{
    // stub
}

